예측된 총 라인수가 50000라인, 프로그래머의 월 평균 생산성이 200라인, 개발에 참여할 프로그래머가 10인 일 때, 개발 소요 기간은

50000 / (200 * 10) = 25개월
--------------------------------
㉠ FIFO 방식으로 처리된다.→ Queue

㉡ 순서 리스트의 뒤(Rear)에서 노드가 삽입되며, 앞(Front)에서 노드가 제거된다.→ Queue

㉢ 선형 리스트의 양쪽 끝에서 삽입과 삭제가 모두 가능한 자료 구조이다. → Deque(Double-Ended Queue)

 (삽입 제한 Deque→ Scroll, 삭제 제한 Deque→ Shelf)

㉣ 인터럽트 처리, 서브루틴 호출 작업 등에 응용된다.→ Stack
--------------------------------
NS차트의 특징

논리의 기술에 중점을 둔 도형을 이용한 표현 방법이다.
그리기가 어렵다.(전문성이 있어야 잘 그린다)
순차, 선택, 반복으로 표현한다.
임의의 제어 이동이 어렵다.
goto구조가 어렵다.
그래픽 설계 도구이다.
상자 도표라고도 한다
프로그램으로 구현이 쉽다.
조건이 복합되어 있는 곳의 처리를 명확히 식별하기에 적합하다.
if문이 여러개일 때 가능
--------------------------------
화이트박스 테스트 종류

① 기초 경로 검사(Basic Path Testing) : 프로그램의 제어 구조를 기반으로 논리적 복잡성을 측정할 수 있게 해주는 테스트 기법

② 조건 검사(Condition Testing) : 논리적 조건을 테스트하는 기법

③ 루프 검사(Loop Testing) : 반복(Loop) 구조를 중심으로 테스트하는 기법

④ 데이터 흐름 검사(Data Flow Testing) : 변수 정의, 변수 사용 위치에 초점을 맞춰 테스트하는 기법
--------------------------------
요구분석

개념적 설계 : 개념스키마 모델링

논리적 설계 : 스키마 설계

물리적 설계 : 데이터 구조 변환
---------------------------------
분산 데이터베이스의 구성요소는 3개 입니다. 

분산 처리기 - 자체적인 처리 능력을 지니며, 지리적으로 분산되어 있는 컴퓨터 시스템을 말한다.
분산 데이터베이스 - 지리적으로 분산되어 있는 데이터베이스로서 해당 지역의 특성에 맞게 데이터베이스가 구성된다.
통신 네트워크 - 분산처리기들을 통신망으로 연결하여 논리적으로 하나의 시스템처럼 작동할 수 있도록 하는 통신 네트워크를 말한다.
---------------------------------
선택정렬: 제일 작은 것 찾아 앞으로 배열 / n^2

버블정렬: 앞의 데이터와 뒤의 데이터 비교해 순서 맞을때까지 정렬 / n(n-1)/2

삽입정렬: 원래 배치된 순서대로 앞의 것과 비교해 하나씩 정렬

퀵정렬: 피벗값 기준 양쪽으로 잘라 배열, 완성될때까지 반복
-----------------------------------
ISO/IEC 25000- SW 품질 평가 통합 모델- SQuaRE로도 불림- 
ISO/IEC 9126, ISO/IEC 12119, ISO/IEC 14598의 3개 표준을 통합한 모델- 
2500n : 개요 및 품질관리- 2501n : 품질모델- 2502n : 품질측정- 
2503n : 품질요구- 2504n : 품질평가- 2505n : 확장분야
----------------------------------
분산 데이터베이스의 구성요소는 3개 입니다. 

분산 처리기 - 자체적인 처리 능력을 지니며, 지리적으로 분산되어 있는 컴퓨터 시스템을 말한다.
분산 데이터베이스 - 지리적으로 분산되어 있는 데이터베이스로서 해당 지역의 특성에 맞게 데이터베이스가 구성된다.
통신 네트워크 - 분산처리기들을 통신망으로 연결하여 논리적으로 하나의 시스템처럼 작동할 수 있도록 하는 통신 네트워크를 말한다.
-----------------------------------
ARP : ip주소 물리주소로 표현

ICMP : 에러 발생시 진단

ppp : 3계층 프로토콜 전송
-------------------------------------
직접 연결 방식  > DAS
----------------------------------
아파치 - 웹서버용 소프트웨어

하둡 - 데이터분석

허니팟 - 접근탐지를 위해 의도적으로 설치해둔 시스템

맵리듀스 - 여러 노드에 태스크를 분배하는 방법
--------------------------------------
시퀀스 다이어그램의 구성항목
약어 : 객생실메시 
객체 / 생명선 / 실행 / 메시지 / 회귀 메시지
--------------------------------------
■ 미들웨어 종류

Data Base (DB)
RPC (Remote Procedure Call) / 원격 프로시저 호출
MOM (Message Oriented Middleware) / 메시지 지향 미들웨어
ORB (Object Request Broker) / 객체 요청 브로커
WAS (Web Application Server) / 웹 어플리케이션 서버
- IBM의 WebSphere, 오라클의 WebLogic
----------------------------------------
구조 다이어그램

클래스, 객체, 패키지, 컴포넌트, 복합, 배치

 

행위 다이어그램

유스케이스, 상태, 활동, 시퀀스, 통신, 상호 작용, 타이밍
-----------------------------------------
= is composed of
+ and
() optional
{}∩ iteration
[] selection
| seperator
@ key field
* comment
** no comment
-------------------------------------------
화이트 박스

-기초 경로 테스트, 루프 테스트, 데이터 흐름 테스트, 조건 커버리지

블랙박스

-동등 분할, 경계값 분석, 오류 예측, 원인 결과 그래프, 비교 테스트
-------------------------------------------
distinct 중복제거
-------------------------------------------
단점: 뷰 자체 인덱스 불가, 뷰 정의 불가(DROP->CREATE), 삽입/삭제/갱신 연산시 제약 존재
-----------------------------------------
1NF 도메인이 원자값(한 셀에 값 하나씩)

2NF 부분 함수 종속 제거(함수 내 데이터끼리 종속 있을 때 분리)

3NF 이행 함수 종속 제거(A>B>C일 때 B>C를 분리)

BCNF 결정자이면서 후보키 아닌 것 제거

4NF, 5NF 종속성 제거
--------------------------------------------
HRN: 우선순위 = (대기 시간 + 서비스 시간) / 서비스 시간
대기시간+서비스시간/서비스시간이 큰 순서대로 스케줄링
-------------------------------------------
ls: 디렉토리 내용 나열

cat: 파일 연결 및 출력

fork: 프로세스 생성

chmod: 파일 모드/특성/권한 변경
------------------------------------------
객체의 자료와 행위를 하나로 묶고, 실제 구현 내용을 외부에 감추는 것을 캡슐화라고 한다. 
이렇게 캡슐화 된 객체의 행위는 외부에서 볼 때는 실제가 아닌 추상적인 것이 되므로 정보 은닉(information hiding)개념이 지켜진다.
--------------------------------------------
jscobson (usecase)
coad(er다이아그램)
럼바우(정보은닉)
-----------------------------------------------

공부에 있는 파일

preorder, 전위 순회 : 위에서부터 왼쪽 원소부터 읽음(+**/ABCDE)

inorder, 중위 순회 : 원소 다 읽고 위 원소로 넘어감(A/B*C*D+E)

postorder, 후위 순회 : 아래에서부터 읽음(AB/C*D*E+)
-------------------------------------------------
소스코드 동적 분석 도구
Avalanche, Valgrind
--------------------------------------------------
튜플: 릴레이션(테이블)의 한 행을 나타냅니다.
도메인: 애트리뷰트가 가질 수 있는 원자값의 집합
------------------------------------------------
distinct: 중복제거
-------------------------------------------------
원자성(Atomicity): all or nothing / event =트리거
----------------------------------------------------
DCL의 기능 : 데이터 보안 / 무결성 유지 / 병행수행 제어 / 회복
---------------------------------------------------
커널: 프로세스 기억장치 입출력관리
쉘: 인터페이스담당 명령어 해석기
-------------------------------------------------
IPv4: Broadcast

IPv6:Unicast, Anycast, Multicast
---------------------------------------------------
프로세스의 상태는 대표적으로 Ready, Running, Blocked, Exit
---------------------------------------------------- 
CMMI 레벨 : 초기화 단계, 관리 단계, 정의 단계, 정량적 관리 단계, 최적화 단계
------------------------------------------------------
PICONET(Personal Interconnect Network) 선지에 답이 있죠?(블루투스)
여담으로 PAN (Personal Area Network)
독립적 … 나오면 P찾으세요!
-------------------------------------------------------
위험관리 → 나선형
------------------------------------------------------
공개키 암호화 RSA
-------------------------------------------------------
소요 기간 = 50000 / (200×10)
------------------------------------------------------
테일러링 개발 방법론

- 내부 기준 : 목표 환경, 요구사항, 프로젝트 특성, 구성원 능력

- 외부 기준 : 국제 표준 품질 기준, 법적 규제
------------------------------------------------------
UML 사물(thing), 관계 다이아그램
------------------------------------------------------
비교항목\크기단위	큰 로크의 단위	작은 로크의 단위
로크의 수		작아진다		많아진다
병행 제어 기법	단순하다		복잡하다
병행성 수준	낮아진다		높아진다
오버헤드		감소한다		증가한다
---------------------------------------------------------
relation - 릴레이션, 표(table) 하나를 지칭

attribute(+) - (차수)(에트리뷰트),(속성,) 컬럼 값, 속성의 수=(디그리),속성들 총칭=릴레이션스키마

tuple(*) - (카티션)값이 적힌 (행)(가로), (튜플) 수=(카디널리티), 각 튜플을 릴레이션 인스턴스라고 함

domain - 도메인, 각 튜플 안에 있는 값 각각을 지칭
----------------------------------------------------------
TCP: Transmission Control Protocol (전송 제어 프로토콜)
ARP: Address Resolution Protocol (주소 해결 프로토콜)
FTP: File Transfer Protocol (파일 전송 프로토콜)
IP: Internet Protocol (인터넷 프로토콜)
----------------------------------------------------------
물리주소 = '세그먼트 시작주소 + 변위값 
----------------------------------------------------------
-구조 다이어그램(Structure Diagram)
클래스 다이어그램(Class Diagram)
객체 다이어그램(Object Diagram)
복합체 구조 다이어그램(Complex Structure Diagram)
배치 다이어그램(Deployment Diagram)
컴포넌트 다이어그램(Component Diagram)
패키지 다이어그램(Package Diagram)
-----------------------------------------------------
-행위 다이어그램(Behavior Diagram)
활동 다이어그램(Activity Diagram)
상태 머신 다이어그램(State Machine Diagram)
유스케이스 다이어그램(Use Case Diagram)
상호작용 다이어그램(Interaction Diagram)
커뮤니케이션 다이어그램(Communication Diagram)
시퀀스 다이어그램(Sequence Diagram)
-----------------------------------------------------------
체크아웃(Check-out)	프로그램 수정을 위해 저장소 파일을 받음
체크인(Check-in)	프로그램 수정 후 저장소에 새로운 버전으로 갱신
-------------------------------------------------------------
빌드 자동화 도구 : Ant, Maven, Gradle

형상 관리 도구 : CVS, SVN, Git
--------------------------------------------------------------
인터페이스 구현 검증 도구 : xUnit, STAF, FitNesse, NTAF, Selenium, watir
--------------------------------------------------------------
SW 개발 표준 산출물
- 분석 : 사용자 요구사항 정의서, 유스케이스 명세서
- 설계 : 클래스 명세서, 사용자 인터페이스 설계서
- 구현 : 프로그램 코드, 단위 시험 결과서, 데이터베이스 테이블
- 시험 : 통합 시험 결과서
-----------------------------------------------
RIP : 15홉 이내, 단순 최단 홉수 경로
-----------------------------------------------
DSA: 정부용 공개키 암호화 알고리즘

ECC: 공개키 암호화 알고리즘

RSA: 비대칭형 공개키 암호화 알고리즘

AES: 암호화 키 = 복호화 키
-----------------------------------------------
ASSOCIATION : 참조관계

REALIZATION : 인터페이스 실현 관계

GENERALIZATION : 자식은 부모의 속성 공유, 부모는 자식으로 대체 가능
다른 한쪽에 영향을 주는 Dependency 의존 관계
------------------------------------------------
럼바우 하면 객체(정보 모델링), 동적(상태 다이어그램), 기능(자료 흐름도, DFD)
-----------------------------------------------
객체지향 분석 기법은 동적,상향식 방식이다
---------------------------------------------
Testcase : 테스트 케이스를 생성하여 이후에 요구사항이 현실적으로 테스트 가능한지 검토

Mistake :  결함(Defect)의 원인이 되는 것으로, 일반적으로 사람(소프트웨어 개발자, 분석가)에 의해 생성된 실수

Inspection : 명세서 작성자를 제외한 다른 검토 전문가들이 명세서를 확인하면서 결함을 발견하는 방법
---------------------------------------------
SELECT δ(시그마) 셀렉트
PROJECT π(파이) 프로젝트
JOIN ⋈(보타이)  조인
DIVISION ÷(나누기)  디비전
--------------------------------------------
로킹 단위가 작으면, 로크의 수가 많아지고 제어 기법이 까다로워지며, 병행성 높아진다.
---------------------------------------------
 - 프로세스가 스레드보다 큰 단위이다. 
- 스레드(Thread)란? 프로세스(Process)내에서의 작업의 단위
- 한 개의 프로세스는 여러개의 스레드를 가질 수 있다
-------------------------------------------------
변수와 제어 정보를 교류하지 않게 해야한다(결합도관련문제)
---------------------------------------------------
페이지 교체 알고리즘

페이지교체 알고리즘은 페이지 부재가 발생했을 때 가상기억장치의 필요한 페이지를 주기억장치에 적재해야 하는데, 이때 주기억장치의 모든 페이지 프레임이 사용중이면 어떤 페이지 프레임을 선택하여 교체할 것인지를 결정하는 기법이다.

OPT(OPTimal replacement, 최적교체)

FIFO(First In First Out)

LRU(Least Recently Used)

LFU(LeastFrequently Used)
---------------------------------------------------
XDMCP은 DBMS하고 관련이 없음.
-------------------------------------------------
델파이 : 전문가 예측
LOC : 비관치, 낙관치, 기대치
COCOMO, PUTNAM : 모듈과 서브 시스템 비용 예측
FP : 기능 점수로 비용 예측